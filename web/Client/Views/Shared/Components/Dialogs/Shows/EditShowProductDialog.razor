@using FMFT.Extensions.Blazor.Bases.Dialogs


    <ModalDialog @ref="ModalDialog">
        <Title>
            Edytuj rodzaj biletu
        </Title>
        <Body>
            <Condition Evaluation="Model == null">
                <Match>
                    <ProgressBar />
                </Match>
                <NotMatch>
                    <EditForm Model="Model" OnValidSubmit="SubmitAsync" id="editshowproduct-form">
                        <DataAnnotationsValidator />

                        <div class="mb-4">
                            <div class="mb-1">
                                <span class="form-label">Nazwa</span>
                                <input type="text" class="form-control" @bind="Model.Name" />
                                <div class="text-danger">
                                    <ValidationMessage For="@(() => Model.Name)" />
                                </div>
                            </div>
                            <div>
                                <span class="form-label">Cena</span>
                                <div class="input-group">
                                    <input type="number" class="form-control" @bind="Model.Price" onclick="this.select()" />
                                    <span class="input-group-text">PLN</span>
                                </div>
                                <div class="text-danger">
                                    <ValidationMessage For="@(() => Model.Price)" />
                                </div>
                            </div>
                        </div>

                        <div class="mb-4">
                            <div class="mb-1">
                                <div class="form-check form-switch">
                                <InputCheckbox id="editshowproduct-isbulk" class="form-check-input" @bind-Value="Model.IsBulk" />
                                <label class="form-check-label" for="editshowproduct-isbulk">
                                    Miejsca nie wyznaczone
                                </label>
                                </div>
                            </div>

                            <Condition Evaluation="Model.IsBulk">
                                <Match>
                                    <div>
                                        <span class="form-label">Ilość</span>
                                        <div class="input-group">
                                            <input type="number" class="form-control" @bind="Model.Quantity" disabled="@(!Model.IsBulk)" onclick="this.select()" />
                                        </div>
                                        <Condition Evaluation="Model.IsBulk">
                                            <NotMatch>
                                                <div class="form-text">
                                                    Ilość miejsc siedzących jest uzależniona od liczby siedzeń w audytorium
                                                </div>
                                            </NotMatch>
                                        </Condition>
                                        <div class="text-danger">
                                            <ValidationMessage For="@(() => Model.Quantity)" />
                                        </div>
                                    </div>
                                </Match>
                                <NotMatch>
                                    <div>
                                        <span class="form-label">Ilość</span>
                                        <div class="input-group">
                                            <input class="form-control bg-light" value="@Auditorium.Seats.Count" readonly />
                                            <span class="input-group-text">@Auditorium.Name</span>
                                        </div>
                                    </div>
                                </NotMatch>
                            </Condition>
                        </div>

                        <div>
                            <div class="form-check form-switch">
                                <InputCheckbox id="addshowproduct-isenabled" class="form-check-input" @bind-Value="Model.IsEnabled" />
                                <label class="form-check-label" for="addshowproduct-isenabled">
                                    Aktywny
                                </label>
                            </div>
                        </div>

                        <AlertGroupBase @ref="AlertGroup">
                            <AlertBase @ref="SuccessAlert" Class="alert-success">
                                Pomyślnie zauktualizowano produkt
                            </AlertBase>
                            <AlertBase @ref="ErrorAlert" Class="alert-danger">
                                Wystąpił błąd. Spróbuj ponownie później
                            </AlertBase>
                            <AlertBase @ref="DeleteNotFoundAlert" Class="alert-danger">
                                Ten produkt został już usunięty
                            </AlertBase>
                        </AlertGroupBase>
                    </EditForm>
                </NotMatch>
            </Condition>            
        </Body>
        <Footer>
            <ButtonBase @ref="DeleteButton" Class="btn btn-danger me-auto" OnClick="HandleDeleteAsync">
                Usuń
            </ButtonBase>
            <ButtonBase Class="btn btn-secondary" OnClick="HideAsync">
                Anuluj
            </ButtonBase>
            <SubmitButtonBase @ref="SubmitButton" Class="btn btn-primary" Form="editshowproduct-form">
                <i class="fa-regular fa-floppy-disk me-1"></i>
                Zapisz
            </SubmitButtonBase>
        </Footer>
    </ModalDialog>
